openapi: 3.0.0
servers:
  - url: http://localhost:3000/api/v1
    description: Local Server
    # url: http://vault-backend.eba-wrntzw3k.ap-south-1.elasticbeanstalk.com/api/v1
    # description: AWS Elastic Bean Stalk
info:
  version: 1.0.0
  title: DevCamper API
  description: Backend API for the DevCamper application to manage bootcamps, courses, reviews, users and authentication
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
# consumes: application/json
produces: application/json
paths:
  /bootcamps:
    get:
      parameters:
        - in: query
          name: select
          example: 'name,housing'
          schema:
            type: string
          required: false
          description: Select specific fields
        - in: query
          name: sort
          example: 'name'
          schema:
            type: string
          required: false
          description: Sort based on value
        - in: query
          name: page
          example: 1
          schema:
            type: number
          required: false
          description: Select page number
        - in: query
          name: limit
          example: 4
          schema:
            type: number
          required: false
          description: Select page limit
      summary: Get all Bootcamps
      tags:
        - Bootcamps
      responses:
        '200':
          description: On success
        '400':
          description: On error
    post:
      summary: Create new Bootcamp
      tags:
        - Bootcamps
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBootcampModel'
      responses:
        '200':
          description: On success
        '400':
          description: On error
  /bootcamps/{id}:
    get:
      parameters:
        - in: path
          name: id
          example: 5d713995b721c3bb38c1f5d0
          schema:
            type: string
          required: true
          description: Bootcamp ID
      summary: Get single Bootcamp
      tags:
        - Bootcamps
      responses:
        '200':
          description: On success
        '400':
          description: On error
    put:
      parameters:
        - in: path
          name: id
          example: 5d713995b721c3bb38c1f5d0
          schema:
            type: string
          required: true
          description: Bootcamp ID
      summary: Update Bootcamp
      tags:
        - Bootcamps
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/UpdateBootcampModel'
      responses:
        '200':
          description: On success
        '400':
          description: On error
    delete:
      parameters:
        - in: path
          name: id
          example: 5d713995b721c3bb38c1f5d0
          schema:
            type: string
          required: true
          description: Bootcamp ID
      summary: Delete Bootcamp
      tags:
        - Bootcamps
      responses:
        '200':
          description: On success
        '400':
          description: On error
  /bootcamps/radius/{zipcode}/{distance}/{unit}:
    get:
      parameters:
        - in: path
          name: zipcode
          example: '02118' # Boston pincode
          schema:
            type: string
          required: true
          description: Zip Code
        - in: path
          name: distance
          example: 10
          schema:
            type: number
          required: true
          description: Distance
        - in: path
          name: unit
          example: mi
          schema:
            type: string
          required: true
          description: Distance Unit (mi/km)
      summary: Find Bootcamps within range
      tags:
        - Bootcamps
      responses:
        '200':
          description: On success
        '400':
          description: On error
  /bootcamps/{id}/photo:
    # x-swagger-router-controller: bootcamps.controller
    put:
      # operationId: uploadBootcampPhoto
      consumes:
        - multipart/form-data
      parameters:
        - in: path
          name: id
          example: 5d713995b721c3bb38c1f5d0
          schema:
            type: string
          required: true
          description: Bootcamp ID
        - in: formData
          name: file
          schema:
            type: file
          # required: true
          description: The file to upload
      summary: Upload photo for bootcamp
      tags:
        - Bootcamps
      responses:
        '200':
          description: On success
        '400':
          description: On error
  /bootcamps/upload:
    post:
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: imageFile
          schema:
            type: file
          description: The file to upload
      summary: Upload Test photo
      tags:
        - Bootcamps
      responses:
        '200':
          description: On success
        '400':
          description: On error
  /courses:
    get:
      parameters:
        - in: query
          name: select
          example: 'title,description'
          schema:
            type: string
          required: false
          description: Select specific fields
        - in: query
          name: sort
          example: 'title'
          schema:
            type: string
          required: false
          description: Sort based on value
        - in: query
          name: page
          example: 1
          schema:
            type: number
          required: false
          description: Select page number
        - in: query
          name: limit
          example: 4
          schema:
            type: number
          required: false
          description: Select page limit
      summary: Get all Courses
      tags:
        - Courses
      responses:
        '200':
          description: On success
        '400':
          description: On error
  /bootcamps/{bootcampId}/courses:
    get:
      parameters:
        - in: path
          name: bootcampId
          example: '5d713995b721c3bb38c1f5d0'
          schema:
            type: string
          required: true
          description: Bootcamp ID
      summary: Get courses for specific bootcamp
      tags:
        - Courses
      responses:
        '200':
          description: On success
        '400':
          description: On error
    post:
      parameters:
        - in: path
          name: bootcampId
          example: '5d713995b721c3bb38c1f5d0'
          schema:
            type: string
          required: true
          description: Bootcamp ID
      summary: Create course for specific bootcamp
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/CreateCourseModel'
      responses:
        '200':
          description: On success
        '400':
          description: On error
  /courses/{id}:
    get:
      parameters:
        - in: path
          name: id
          example: '5d725c84c4ded7bcb480eaa0'
          schema:
            type: string
          required: true
          description: Course ID
      summary: Get single Course
      tags:
        - Courses
      responses:
        '200':
          description: On success
        '400':
          description: On error
    put:
      parameters:
        - in: path
          name: id
          example: '5d725c84c4ded7bcb480eaa0'
          schema:
            type: string
          required: true
          description: Course ID
      summary: Update Course
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/UpdateCourseModel'
      responses:
        '200':
          description: On success
        '400':
          description: On error
    delete:
      parameters:
        - in: path
          name: id
          example: '5d725c84c4ded7bcb480eaa0'
          schema:
            type: string
          required: true
          description: Course ID
      summary: Delete Course
      tags:
        - Courses
      responses:
        '200':
          description: On success
        '400':
          description: On error

#-------------------------------------------------------- Models for API's-------------------------------------------
#--------------------------------------------------------------------------------------------------------------------
#--------------------------------------------------------------------------------------------------------------------

components:
  schemas:
    CreateBootcampModel:
      required:
        - name
        - description
        - website
        - phone
        - email
        - address
        - careers
        - housing
        - jobAssistance
        - jobGuarantee
        - acceptGi
      properties:
        name:
          type: string
          example: 'Code Academy Bootcamp'
        description:
          type: string
          example: 'Code Academy is a full stack Java Bootcamp'
        website:
          type: string
          example: 'https://codeacademy.com'
        phone:
          type: string
          example: '(555) 555-5555'
        email:
          type: string
          example: 'enroll@codeacademy.com'
        address:
          type: string
          example: '233 Bay State Rd Boston MA 02215'
        careers:
          type: array
          items:
            type: string
          example: ['Web Development', 'Other', 'Business']
        housing:
          type: boolean
          example: false
        jobAssistance:
          type: boolean
          example: false
        jobGuarantee:
          type: boolean
          example: false
        acceptGi:
          type: boolean
          example: false
    UpdateBootcampModel:
      properties:
        name:
          type: string
          example: 'Code Academy Bootcamp'
        description:
          type: string
          example: 'Code Academy is a full stack Java Bootcamp'
        website:
          type: string
          example: 'https://codeacademy.com'
        phone:
          type: string
          example: '(555) 555-5555'
        email:
          type: string
          example: 'enroll@codeacademy.com'
        address:
          type: string
          example: '233 Bay State Rd Boston MA 02215'
        careers:
          type: array
          items:
            type: string
          example: ['Web Development', 'Other', 'Business']
        housing:
          type: boolean
          example: false
        jobAssistance:
          type: boolean
          example: false
        jobGuarantee:
          type: boolean
          example: false
        acceptGi:
          type: boolean
          example: false
    CreateCourseModel:
      required:
        - title
        - description
        - weeks
        - tuition
        - minimumSkill
        - scholarhipsAvailable
      properties:
        title:
          type: string
          example: 'MERN Stack Development'
        description:
          type: string
          example: 'This course provides essentila knowledge on MERN stack development'
        weeks:
          type: number
          example: 10
        tuition:
          type: number
          example: 10000
        minimumSkill:
          type: string
          example: intermediate
        scholarhipsAvailable:
          type: boolean
          example: false
    UpdateCourseModel:
      properties:
        title:
          type: string
          example: 'MERN Stack Development'
        description:
          type: string
          example: 'This course provides essentila knowledge on MERN stack development'
        weeks:
          type: number
          example: 10
        tuition:
          type: number
          example: 10000
        minimumSkill:
          type: string
          example: intermediate
        scholarhipsAvailable:
          type: boolean
          example: false
